cmake_minimum_required(VERSION 3.0.0)

project(blog VERSION 0.1
	DESCRIPTION "Code samples from https://vorbrodt.blog"
	LANGUAGES C CXX)

if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Release)
endif()

find_package(Threads REQUIRED)
find_package(TBB REQUIRED)
find_package(Boost REQUIRED)
find_package(range-v3 REQUIRED)
find_package(Protobuf REQUIRED)
find_package(Thrift REQUIRED)
find_package(GRPC REQUIRED)
# find_package(MYSQL REQUIRED) # no cmake
# find_package(SOCI REQUIRED) # no cmake
find_package(Catch2 REQUIRED)
find_package(Benchmark REQUIRED)
find_package(hayai REQUIRED)
find_package(nonius CONFIG REQUIRED)
find_package(lz4 REQUIRED)
# find_package(XMLRPC REQUIRED) # no vcpkg
find_package(CURL REQUIRED)
find_package(unofficial-CURLpp REQUIRED)
find_package(FMT REQUIRED)
find_package(CryptoPP REQUIRED)
# find_package(WolfSSL REQUIRED) # no vcpkg
# find_package(Botan REQUIRED) # no cmake

include_directories("C:\\Code\\vcpkg\\installed\\x64-windows\\include")
link_directories("C:\\Code\\vcpkg\\installed\\x64-windows\\lib")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++latest")
set(CMAKE_CXX_STANDARD_LIBRARIES "${CMAKE_THREAD_LIBS_INIT}")

set(EXECUTABLE_OUTPUT_PATH "${CMAKE_SOURCE_DIR}/bin")
set(LIBRARY_OUTPUT_PATH "${CMAKE_SOURCE_DIR}/bin")

add_subdirectory(src)

# get_cmake_property(_variableNames VARIABLES)
# list (SORT _variableNames)
# foreach (_variableName ${_variableNames})
#     message(STATUS "${_variableName}=${${_variableName}}")
# endforeach()
